name: Deploy Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '22'

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run TypeScript check
        run: yarn type-check

      - name: Run ESLint
        run: yarn lint

  build:
    runs-on: ubuntu-latest
    needs: test
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build project
        run: yarn build

      - name: Upload build artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: build-output
          path: dist/
          retention-days: 2

  deploy-production:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment: production
    timeout-minutes: 20
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-output
          path: dist

      - name: Prepare remote directory
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            mkdir -p ~/portfolio/dist

      - name: Upload dist to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          source: "dist/**"
          target: "~/portfolio/dist"
          strip_components: 1
          overwrite: true

      - name: Deploy to Production Server
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.SSH_HOST }}
          port: ${{ secrets.SSH_PORT }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |
            set -euo pipefail
            echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π..."
            echo "üìÖ –í—Ä–µ–º—è: $(date)"
            echo "üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
            echo "üìÅ –î–æ–º–∞—à–Ω—è—è –ø–∞–ø–∫–∞: $(pwd)"
            
            # –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
            echo "üìã –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞"
            echo "üíæ –°–≤–æ–±–æ–¥–Ω–æ–µ –º–µ—Å—Ç–æ:"
            df -h ~
            echo "üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –¥–æ–º–∞—à–Ω–µ–π –ø–∞–ø–∫–∏:"
            ls -la ~
            
            # –®–∞–≥ 2: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
            echo "üìã –®–∞–≥ 2: –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞"
            if [ -d "$HOME/portfolio" ]; then
              echo "‚úÖ –ü–∞–ø–∫–∞ ~/portfolio —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
              cd ~/portfolio
              echo "üìÅ –¢–µ–∫—É—â–∞—è –ø–∞–ø–∫–∞: $(pwd)"
              echo "üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ portfolio:"
              ls -la
              
              # –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π, –Ω–æ –ø–∞–ø–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è
              if [ ! -d ".git" ] && [ "$(ls -A . 2>/dev/null)" ]; then
                echo "üßπ –ü–∞–ø–∫–∞ –Ω–µ –ø—É—Å—Ç–∞—è, –Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º"
                echo "üì¶ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã..."
                mkdir -p ../portfolio-backup-$(date +%Y%m%d-%H%M%S)
                mv * ../portfolio-backup-$(date +%Y%m%d-%H%M%S)/ 2>/dev/null || true
                mv .* ../portfolio-backup-$(date +%Y%m%d-%H%M%S)/ 2>/dev/null || true
                echo "üì• –ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
                git clone https://github.com/shiryaevam/portfolio.git .
              fi
            else
              echo "‚ùå –ü–∞–ø–∫–∞ ~/portfolio –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
              echo "üì¶ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –∏ –∫–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π..."
              mkdir -p ~/portfolio
              cd ~/portfolio
              git clone https://github.com/shiryaevam/portfolio.git .
              echo "‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω"
            fi
            
            # –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
            echo "üìã –®–∞–≥ 3: –ü—Ä–æ–≤–µ—Ä—è–µ–º Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
            if [ -d ".git" ]; then
              echo "‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω"
              echo "üîó –¢–µ–∫—É—â–∏–π remote:"
              git remote -v
              echo "üåø –¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞:"
              git branch
              echo "üìù –ü–æ—Å–ª–µ–¥–Ω–∏–π –∫–æ–º–º–∏—Ç:"
              git log -1 --oneline
            else
              echo "‚ùå Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω!"
              exit 1
            fi
            
            # –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose.yml
            echo "üìã –®–∞–≥ 4: –ü—Ä–æ–≤–µ—Ä—è–µ–º docker-compose.yml"
            if [ -f "docker-compose.yml" ]; then
              echo "‚úÖ docker-compose.yml –Ω–∞–π–¥–µ–Ω"
            else
              echo "‚ùå docker-compose.yml –Ω–µ –Ω–∞–π–¥–µ–Ω!"
              echo "üìÇ –§–∞–π–ª—ã –≤ —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–µ:"
              ls -la
              exit 1
            fi
            
            # –®–∞–≥ 5: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
            echo "üìã –®–∞–≥ 5: –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
            if docker compose -p portfolio ps | grep -q "Up"; then
              echo "üõë –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
              docker compose -p portfolio down --remove-orphans
              echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
            else
              echo "‚ÑπÔ∏è –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –∑–∞–ø—É—â–µ–Ω—ã"
            fi
            
            # –®–∞–≥ 6: –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥
            echo "üìã –®–∞–≥ 6: –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥"
            echo "üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º remote –Ω–∞ HTTPS..."
            git remote set-url origin https://github.com/shiryaevam/portfolio.git
            echo "üì• –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è..."
            git fetch origin main
            echo "üîÑ –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥..."
            git reset --hard origin/main
            git pull origin main
            echo "‚úÖ –ö–æ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω"
            
            # –®–∞–≥ 7: –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–±–µ–∑ —Å–±–æ—Ä–∫–∏)
            echo "üìã –®–∞–≥ 7: –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
            echo "‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –±–µ–∑ —Å–±–æ—Ä–∫–∏..."
            docker compose -p portfolio up -d
            echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –∑–∞–ø—É—â–µ–Ω—ã"
            
            # –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            echo "üìã –®–∞–≥ 8: –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç"
            echo "‚è≥ –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥ –¥–ª—è –∑–∞–ø—É—Å–∫–∞..."
            sleep 15
            echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
            docker compose -p portfolio ps
            echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
